name: big-data-demo

services:
  # Zookeeper est là pour faire une mémoire partagée
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  # Définition de mon broker KAFKA
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test_topic:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  producer:
    build:
      context: producer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    restart: on-failure
    environment:
      KAFKA_BROKER: kafka:9092
      WEATHER_API_KEY: ${WEATHER_API_KEY} 
    volumes:
      - ./producer:/app
    command: ["python", "-u", "producer-CoinMarketCap-API.py"]

  consumer:
    build:
      context: consumer
      dockerfile: Dockerfile
    depends_on:
      - kafka
    restart: on-failure
    environment:
      KAFKA_BROKER: kafka:9092
    volumes:
      - ./consumer:/app
    command: ["python", "-u", "consumer-CoinMarketCap-API.py"]
